"""Initial migration

Revision ID: 165bdba18d77
Revises: 
Create Date: 2025-06-27 23:34:48.928222

"""
from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy


# revision identifiers, used by Alembic.
revision = '165bdba18d77'
down_revision = None
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Enable pgvector extension (required for vector similarity search)
    op.execute('CREATE EXTENSION IF NOT EXISTS vector')
    
    
    op.create_table('stores',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('pos_type', sa.Enum('POSABIT', 'COVA', 'DUTCHIE', 'FLOWHUB', 'TREEZ', 'BLAZE', 'JANE', 'LEAFLY', 'OTHER', name='possystem'), nullable=False),
    sa.Column('pos_config', sa.JSON(), nullable=True),
    sa.Column('geo_lat', sa.Numeric(precision=10, scale=8), nullable=True),
    sa.Column('geo_lon', sa.Numeric(precision=11, scale=8), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('strains',
    sa.Column('canonical_name', sa.String(length=255), nullable=False),
    sa.Column('cultivar', sa.String(length=255), nullable=True),
    sa.Column('strain_type', sa.Enum('INDICA', 'SATIVA', 'HYBRID', 'CBD_DOMINANT', 'UNKNOWN', name='straintype'), nullable=False),
    sa.Column('lineage', sa.Text(), nullable=True),
    sa.Column('vector', pgvector.sqlalchemy.Vector(dim=768), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('canonical_name')
    )
    op.create_table('products',
    sa.Column('store_id', sa.UUID(), nullable=False),
    sa.Column('strain_id', sa.UUID(), nullable=True),
    sa.Column('sku', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('brand', sa.String(length=255), nullable=True),
    sa.Column('product_family', sa.Enum('FLOWER', 'EDIBLE_LIQUID', 'EDIBLE_SOLID', 'PREROLL', 'TOPICAL', 'CONCENTRATE', 'CARTRIDGE', 'CBD', 'APPAREL', 'PARAPHERNALIA', 'SAMPLE', 'SEED', 'CLONE', 'OTHER', name='productfamily'), nullable=False),
    sa.Column('thc_pct', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('cbd_pct', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('json_raw', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['strain_id'], ['strains.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('store_id', 'sku', name='uq_store_sku')
    )
    op.create_table('sales_baseline',
    sa.Column('store_id', sa.UUID(), nullable=False),
    sa.Column('ticket_id', sa.String(length=255), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales_current',
    sa.Column('store_id', sa.UUID(), nullable=False),
    sa.Column('ticket_id', sa.String(length=255), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('item_notes', sa.Text(), nullable=True),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('search_logs',
    sa.Column('store_id', sa.UUID(), nullable=True),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('intent_json', sa.JSON(), nullable=True),
    sa.Column('results_count', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('cached', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('store_metrics',
    sa.Column('store_id', sa.UUID(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('baseline_aov', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('current_aov', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lift_abs', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('lift_pct', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('searches_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['stores.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('store_id', 'date', name='uq_store_date')
    )
    op.create_table('strain_effects',
    sa.Column('strain_id', sa.UUID(), nullable=False),
    sa.Column('effect', sa.String(length=100), nullable=False),
    sa.Column('confidence', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['strain_id'], ['strains.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('strain_effects')
    op.drop_table('store_metrics')
    op.drop_table('search_logs')
    op.drop_table('sales_current')
    op.drop_table('sales_baseline')
    op.drop_table('products')
    op.drop_table('strains')
    op.drop_table('stores')
    
    # Drop PostgreSQL enums
    op.execute('DROP TYPE IF EXISTS possystem CASCADE')
    op.execute('DROP TYPE IF EXISTS straintype CASCADE')
    op.execute('DROP TYPE IF EXISTS productfamily CASCADE')
    
    # Drop vector extension if needed
    op.execute('DROP EXTENSION IF EXISTS vector CASCADE')
    # ### end Alembic commands ###
